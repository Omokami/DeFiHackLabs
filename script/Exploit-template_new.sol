// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.15;

import "forge-std/Test.sol";

// @KeyInfo - Total Lost : ~999M US$
// Attacker : 0xcafebabe
// Attack Contract : attackcontractaddrhere
// Vulnerable Contract : vulcontractaddrhere
// Attack Tx : 0x123456789

// @Info
// Vulnerable Contract Code : https://etherscan.io/address/0xdeadbeef#code

// @Analysis
// Post-mortem : postmortemurlhere
// Twitter Guy : twitterguyhere
// Hacking God : hackinggodhere

contract ExploitScript is Test {
    uint256 blocknumToForkFrom = 1234567;

   modifier balanceLog() {
        // Change 18 to the token decimals ,keep it 18 for ETH or WETH derivatives,
        //For ERC20 use IERC20's balanceOf(address(this))  instead of address(this).balance
        emit log_named_decimal_uint("Attacker ETH Balance Before exploit", address(this).balance, 18);
        _;
        emit log_named_decimal_uint("Attacker ETH Balance After exploit", address(this).balance, 18);
    }

    function setUp() public {

        vm.createSelectFork("mainnet", blocknumToForkFrom);
    }

    function testExploit() public balanceLog {
        //implement exploit code here
    }
}
